{
  "openapi": "3.0.1",
  "info": {
    "title": "App.EndPoint.Api",
    "version": "1.0"
  },
  "paths": {
    "/CarOfUser/Create": {
      "post": {
        "tags": [
          "CarOfUser"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarOfUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CarOfUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CarOfUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Model/GetAll": {
      "get": {
        "tags": [
          "Model"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Model/GetById": {
      "get": {
        "tags": [
          "Model"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          }
        }
      }
    },
    "/Model/Create": {
      "post": {
        "tags": [
          "Model"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Model/Update": {
      "post": {
        "tags": [
          "Model"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Model/Delete": {
      "delete": {
        "tags": [
          "Model"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CarOfUser": {
        "required": [
          "address",
          "brandCar",
          "firstName",
          "lastName",
          "licensePlateCar",
          "mobile",
          "modelId",
          "nationalCode",
          "technicalInspection",
          "yearOfProduction"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "nationalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "mobile": {
            "minLength": 1,
            "pattern": "^09\\d{9}$",
            "type": "string"
          },
          "licensePlateCar": {
            "maxLength": 6,
            "minLength": 0,
            "type": "string"
          },
          "yearOfProduction": {
            "maximum": 2025,
            "minimum": 1900,
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "minLength": 1,
            "type": "string"
          },
          "technicalInspection": {
            "type": "string",
            "format": "date"
          },
          "brandCar": {
            "$ref": "#/components/schemas/UserBrandCarEnum"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatusCarEnum"
          },
          "modelId": {
            "type": "integer",
            "format": "int32"
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          }
        },
        "additionalProperties": false
      },
      "Model": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "carOfUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CarOfUser"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBrandCarEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserStatusCarEnum": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      }
    }
  }
}